parameters:
- name: kubernetes.context
  value: rancher-desktop
- name: dns.domain
  value: localhost
- name: storage.class
  brief: |
    Name of the existing Kubernetes storage class.
    This class will be used to provision PVs for Kubeflow such and notebooks and databases

    To check for available storage classes run: `kubectl get sc`
  fromEnv: STORAGE_CLASS

- name: ingress
  parameters:
  - name: class
    fromEnv: INGRESS_CLASS
  - name: protocol
    value: http
  - name: hosts
    value: inference.${dns.domain}
  - name: hosts
    value: >-
      inference.${dns.domain}
      svc.cluster.local
    component: knative-serving
  - name: hosts
    component: kserve-model-ui
    value: models.${dns.domain}
  - name: paths
    component: kserve-model-ui
    value: /
  - name: hosts
    component: kserve-ingressgateway
    brief: |
      Wildcard hosts works with Traefik
    value: >-
      models.${dns.domain}
      inference.${dns.domain}
      *.inference.${dns.domain}
  - name: hosts
    component: kserve-localgateway
    value: ""

- name: istio
  parameters:
  - name: namespace
    value: istio-system
  - name: version
    value: 1.15.1

- name: knative
  parameters:
  - name: serving.istio
    brief: Keep enabled for kserve Serverless mode
    value: enabled
  - name: serving.hpa
    value: disabled
- name: istio
  component: knative-serving
  parameters:
  - name: ingressGateway
    value: kserve-ingressgateway
  - name: localGateway
    value: kserve-localgateway

- name: kserve.deploymentMode
  brief: |
    KServe mode: Serverless or RawDeployment
    See more: 
  value: Serverless

outputs:
- name: models.url
  brief: KServe Models UI
  value: ${ingress.protocol}://models.${dns.domain}
- name: kserve.url
  brief: KServe Ingress
  value: ${ingress.protocol}://inference.${dns.domain}
