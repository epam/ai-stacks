parameters:
- name: argo.oidc.clientSecret
  brief: | 
    OpenID connect client mutual trust secret between Dex and Argo
    tip: you can use random values
  fromEnv: ARGO_OIDC_CLIENT_SECRET
- name: argo.executor
  brief: |
    At the moment k8sapi has been deprecated. It's replacement (emissary) 
    has not been tested yet 
    see more info: https://argoproj.github.io/argo-workflows/workflow-executors/
  default: emissary
  fromEnv: ARGO_EXECUTOR
  # value: k8sapi

- name: ingress.hosts
  component: argo
  value: "argo.${dns.domain}"
# TODO: we may replace in the future hard dependency on minio 
# in favour of cloud native solutions (or minio to proxy to cloud native)
# see: https://argoproj.github.io/argo-workflows/configure-artifact-repository/#configuring-your-artifact-repository

- name: bucket
  component: argo
  parameters:
  - name: host
    value: "minio.${minio.namespace}.svc"
  - name: port
    value: 9000

- name: postgresql
  component: argo-db
  parameters:
  - name: namespace
    value: argo
  - name: volumeSize
    value: 2Gi
  - name: database
    value: argo
  - name: adminPassword
    brief: Database admin password (all databases)
    fromEnv: DATABASE_ROOT_PASSWORD
  - name: user
    value: argo
  - name: password
    brief: Database user password (all databases)
    fromEnv: DATABASE_USER_PASSWORD
